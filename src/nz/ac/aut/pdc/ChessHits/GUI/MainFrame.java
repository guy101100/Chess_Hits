/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 * hi yue
 */
package nz.ac.aut.pdc.ChessHits.GUI;

import java.awt.GridLayout;
import java.util.Observable;
import java.util.Observer;
import nz.ac.aut.pdc.ChessHits.model.Board;
import nz.ac.aut.pdc.ChessHits.model.ChessHitsGame;
import nz.ac.aut.pdc.ChessHits.model.Player;

// Variables declaration - do not modify                     
// End of variables declaration                   
/**
 *
 * @author gl
 */
public class MainFrame extends javax.swing.JFrame {

    private ChessHitsGame game;
    private Player playerOne;
    private Player playerTwo;
    private Board board;

    MainFrame(Player playerOne, Player playerTwo, ChessHitsGame game, boolean isPlayerOneWhite) {
        this.game = game;
        this.playerOne = playerOne;
        this.playerTwo = playerTwo;
        this.board = game.getBoard();
        initComponents();
        this.setLocationRelativeTo(null);
        setUpPanels();
        if (isPlayerOneWhite) {
            this.playerOne.setIsTurn(true);
            game.setWhitePlayer(playerOne);
            game.setBlackPlayer(playerTwo);
            game.setWhiteTurn(true);
            this.playerTwo.setIsTurn(false);

        } else {
            this.playerOne.setIsTurn(false);
            game.setWhitePlayer(playerTwo);
            game.setBlackPlayer(playerOne);
            game.setWhiteTurn(true);
            this.playerTwo.setIsTurn(true);
        }
        update();
    }

    public void update() {
        if (playerOne.getIsTurn()) {
            lblPlayerMoveTurn.setText("turn: " + playerOne.getName());
            lblPlayerColor.setText("color: " + playerOne.getSelectedColor().getTextRepresentation());
        } else {
            lblPlayerMoveTurn.setText("turn: " + playerTwo.getName());
            lblPlayerColor.setText("color: " + playerTwo.getSelectedColor().getTextRepresentation());
        }
    }

    private void setUpPanels() {
        int row = board.getHeight();
        int col = board.getWidth();
        gamePanel.setLayout(new GridLayout(row, col));
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                SqurarePanel sQP = new SqurarePanel(game, i, j, this);
                gamePanel.add(sQP);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblPlayerMoveTurn = new javax.swing.JLabel();
        gamePanel = new javax.swing.JPanel();
        lblPlayerColor = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newGame = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 600));
        setMinimumSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblPlayerMoveTurn.setText("playerNmlb");
        lblPlayerMoveTurn.setAlignmentY(0.0F);
        lblPlayerMoveTurn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPlayerMoveTurn.setMaximumSize(null);
        lblPlayerMoveTurn.setMinimumSize(null);
        lblPlayerMoveTurn.setPreferredSize(null);
        lblPlayerMoveTurn.setRequestFocusEnabled(false);
        lblPlayerMoveTurn.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblPlayerMoveTurn, gridBagConstraints);
        lblPlayerMoveTurn.getAccessibleContext().setAccessibleDescription("");

        gamePanel.setMaximumSize(new java.awt.Dimension(100, 100));
        gamePanel.setMinimumSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 407, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.ipadx = 307;
        gridBagConstraints.ipady = 288;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(gamePanel, gridBagConstraints);

        lblPlayerColor.setText("colorlb");
        lblPlayerColor.setFocusable(false);
        lblPlayerColor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblPlayerColor.setMaximumSize(null);
        lblPlayerColor.setMinimumSize(null);
        lblPlayerColor.setPreferredSize(null);
        lblPlayerColor.setRequestFocusEnabled(false);
        lblPlayerColor.setVerifyInputWhenFocusTarget(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        getContentPane().add(lblPlayerColor, gridBagConstraints);

        jMenu1.setText("File");

        newGame.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newGame.setText("New Game");
        newGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGameActionPerformed(evt);
            }
        });
        jMenu1.add(newGame);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGameActionPerformed
        game = new ChessHitsGame();
        gamePanel.removeAll();
        this.setVisible(false);
        StartFrame start = new StartFrame(game);
        start.setVisible(true);
    }//GEN-LAST:event_newGameActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel gamePanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel lblPlayerColor;
    private javax.swing.JLabel lblPlayerMoveTurn;
    private javax.swing.JMenuItem newGame;
    // End of variables declaration//GEN-END:variables
}
